{
	"name": "Trasformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sourceOfTxt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutBlobParquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumnTypes"
				}
			],
			"script": "source(output(\n\t\t{яюD\u0000A\u0000Y\u0000_\u0000I\u0000D\u0000} as string,\n\t\t\u0000r\u0000c\u0000_\u0000n\u0000a\u0000m\u0000e\u0000 as string,\n\t\t\u0000C\u0000O\u0000D\u0000E\u0000 as string,\n\t\t\u0000N\u0000A\u0000M\u0000E\u0000 as string,\n\t\t\u0000E\u0000N\u0000D\u0000_\u0000Q\u0000N\u0000T\u0000Y\u0000 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'delimited',\n\tcontainer: 'outputblob',\n\tfolderPath: 'bc6f661b-7bde-4694-b632-9c01e374d33c',\n\tfileName: 'data_9b7fb8f7-86cd-44a7-93ac-70131c08a8e5_c784840f-a478-47ab-82e8-494b3c034d97.txt',\n\tcolumnDelimiter: '\\t',\n\tescapeChar: '\\\\',\n\tqutoChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> sourceOfTxt\nsourceOfTxt derive(each(match(name=='END_QNTY'), $$ = toInteger($$))) ~> DerivedColumnTypes\nDerivedColumnTypes sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sink1"
		}
	}
}