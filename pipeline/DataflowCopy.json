{
	"name": "DataflowCopy",
	"properties": {
		"description": "Run dataflow with Explicit copy to ingest copy source",
		"activities": [
			{
				"name": "LoadData",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "BinaryReadSettings",
							"compressionProperties": {
								"type": "TarGZipReadSettings"
							}
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "inBinFile",
						"type": "DatasetReference",
						"parameters": {
							"url": "@pipeline().parameters.url"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "outBinaryBlob",
						"type": "DatasetReference",
						"parameters": {
							"destFolder": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Trasformation",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Trasformation",
						"type": "DataFlowReference",
						"parameters": {
							"folderTxtFiles": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"url": {
				"type": "string"
			}
		},
		"annotations": []
	}
}